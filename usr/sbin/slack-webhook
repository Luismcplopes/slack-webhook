#!/bin/bash
#
#  slack-webhook 
#    Tool for sending messages to slack via incoming webhooks tool
#
#    To use replace the SLACK_URL_HOOK variable with your own
#    slack incomding webhook url
#
# -- MIT license --
# Copyright (c) 2017 Patrick Bailey
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#########################################

SLACK_URL_HOOK="<<UPDATE-ME>>"

#########################################
#
# Default variables
#
#########################################
USERNAME="incoming-webhook"
LEVEL="info"
COLOR="#d3d3d3"
EMOJI="slack"
ROOM="dev_ops"
TITLE="SERVER STATUS"
MESSAGE="Test Left Message\nSecond line"
TITLE_RIGHT=""
MESSAGE_RIGHT=""

main() {
  if [[ $# -eq 0 ]]; then
    usage
  fi
  #Check for -h, --help first
  for var in "$@"
  do
     if [ "$var" = "-h" ] || [ "$var" = "--help" ]; then
       usage
     fi
  done
  
  #loops through arguments two at a time
  while [[ $# -gt 1 ]]
  do
    key="$1"
    case $key in
      -e|--emoji)
        EMOJI=$2
        shift # past argument
      ;;
      -l|--level)
        level $2
        shift # past argument
      ;;
      -m|--message)
        MESSAGE=$2
        shift # past argument
      ;;
      --message-right)
        MESSAGE_RIGHT=$2
        shift # past argument
      ;;
      -u|--username)
        USERNAME="$2"
        shift # past argument
      ;;
      -r|--room)
        ROOM=$2
        shift # past argument
      ;;
      -t|--title)
        TITLE=$2
        shift # past argument
      ;;
      --title-right)
        TITLE_RIGHT=$2
        shift # past argument
      ;;
      *)
      # unknown option
      ;;
    esac
    shift
  done
  
  color $LEVEL

  ######################################
  # 
  # Testing
  #   Uncomment this section for testing
  #
  ######################################
  #echo "USERNAME:       $USERNAME"
  #echo "LEVEL:          $LEVEL"
  #echo "EMOJI:          $EMOJI"
  #echo "ROOM:           $ROOM"
  #echo "TITLE:          $TITLE"
  #echo "MESSAGE:        $MESSAGE"
  #echo "TITLE_RIGHT:    $TITLE_RIGHT"
  #echo "MESSAGE_RIGHT:  $MESSAGE_RIGHT"
  #echo "COLOR:          $COLOR"
  #echo ""
  ####################################### 
  #
  # End test section
  #
  ####################################### 

  if [ -n "$TITLE_RIGHT" ] && [ -n "$MESSAGE_RIGHT" ];then
      post_double_msg
    else
      post_msg
  fi
}

usage(){
  echo "slack-webhook"
  echo "Usage: slack-webhook [options...]"
  echo "Options:"
  echo " -e, --emoji     Default [$EMOJI] emoji to use for slack post"
  echo " -h, --help      This help text"
  echo " -l, --level     Default [$LEVEL] Log level [info, good, warn, crit]"
  echo " -m, --message   Message to post to slack room"
  echo "   , --message-right   Message to post to slack room on the right half"
  echo " -u, --username  Default [$USERNAME] Username to post as Default"
  echo " -r, --room      Default [$ROOM] slack room to post to"
  echo " -t, --title     Title of message"
  echo "   , --title-right     Title of message on the right half"
  exit 0
}

level(){
  #Valid values info,good,warn,crit"
  if [ $1 = "info" ] || [ $1 = "good" ] || [ $1 = "warn" ]; then
    LEVEL=$1
  else
    LEVEL="crit"
  fi 
}

#Color is set per LEVEL 
color(){
  if [ $1 = "info" ];then 
    COLOR="#d3d3d3"
  elif [ $1 = "good" ];then 
    COLOR="good"
  elif [ $1 = "warn" ];then
    COLOR="warning"
  else 
    COLOR="danger"
  fi
}

####################################################
#
# Customize the single post here
# see https://api.slack.com/docs/message-attachments
# for more details
#
####################################################
post_msg() {
  RETURN_VAL=$(curl -H "Content-type:application/json" \
  -X POST -d \
  '{
     "channel" : "#'"$ROOM"'",
     "username" : "'"$USERNAME"'",
     "icon_emoji" : ":'"$EMOJI"':",
     "attachments" : [
       {
         "fallback" : "'"$TITLE"'",
         "color" : "'"$COLOR"'",
         "fields" : [
           {
             "title" : "'"$TITLE"'",
             "value" : "'"$MESSAGE"'"
            }
          ]
        }
      ]
  }' $SLACK_URL_HOOK)

  #Bad return
  if [ "$RETURN_VAL" != "ok" ]; then
    echo "Error posting to slack incoming webhook"
    exit 1
  fi
}

####################################################
#
# Customize the double post here
# see https://api.slack.com/docs/message-attachments
# for more details
#
####################################################
post_double_msg() {
  RETURN_VAL=$(curl -H "Content-type:application/json" \
  -X POST -d \
  '{
     "channel" : "#'"$ROOM"'",
     "username" : "'"$USERNAME"'",
     "icon_emoji" : ":'"$EMOJI"':",
     "attachments" : [
       {
         "fallback" : "'"$TITLE"'",
         "color" : "'"$COLOR"'",
         "fields" : [
           {
             "title" : "'"$TITLE"'",
             "value" : "'"$MESSAGE"'",
             "short" : true
            },
            {
              "title" : "'"$TITLE_RIGHT"'",
              "value" : "'"$MESSAGE_RIGHT"'",
              "short" : true
            }
          ]
        }
      ]
  }' $SLACK_URL_HOOK)

  #Bad return
  if [ "$RETURN_VAL" != "ok" ]; then
    echo "Error posting to slack incoming webhook"
    exit 1
  fi
}

main "$@"
